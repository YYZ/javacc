/* Generated By:JavaCC: Do not edit this line. SLPTokeniserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SLPTokeniserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SEMIC = 11;
  /** RegularExpression Id. */
  int COLON = 12;
  /** RegularExpression Id. */
  int ASSIGN = 13;
  /** RegularExpression Id. */
  int LBR = 14;
  /** RegularExpression Id. */
  int RBR = 15;
  /** RegularExpression Id. */
  int COMMA = 16;
  /** RegularExpression Id. */
  int PLUS_SIGN = 17;
  /** RegularExpression Id. */
  int MINUS_SIGN = 18;
  /** RegularExpression Id. */
  int MULT_SIGN = 19;
  /** RegularExpression Id. */
  int DIV_SIGN = 20;
  /** RegularExpression Id. */
  int RCBR = 21;
  /** RegularExpression Id. */
  int LCBR = 22;
  /** RegularExpression Id. */
  int EXLM = 23;
  /** RegularExpression Id. */
  int QUESTION = 24;
  /** RegularExpression Id. */
  int PERCENT = 25;
  /** RegularExpression Id. */
  int EQUALS = 26;
  /** RegularExpression Id. */
  int NOT_EQUAL = 27;
  /** RegularExpression Id. */
  int LEFT_BRACE = 28;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 29;
  /** RegularExpression Id. */
  int LEFT_BRACE_EQUAL = 30;
  /** RegularExpression Id. */
  int RIGHT_BRACE_EQUAL = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int AND = 33;
  /** RegularExpression Id. */
  int BOOL = 34;
  /** RegularExpression Id. */
  int CONST = 35;
  /** RegularExpression Id. */
  int DO = 36;
  /** RegularExpression Id. */
  int ELSE = 37;
  /** RegularExpression Id. */
  int FALSE = 38;
  /** RegularExpression Id. */
  int IF = 39;
  /** RegularExpression Id. */
  int INT = 40;
  /** RegularExpression Id. */
  int MAIN = 41;
  /** RegularExpression Id. */
  int NOT = 42;
  /** RegularExpression Id. */
  int OR = 43;
  /** RegularExpression Id. */
  int REAL = 44;
  /** RegularExpression Id. */
  int RETURN = 45;
  /** RegularExpression Id. */
  int STR = 46;
  /** RegularExpression Id. */
  int THEN = 47;
  /** RegularExpression Id. */
  int TRUE = 48;
  /** RegularExpression Id. */
  int VAR = 49;
  /** RegularExpression Id. */
  int VOID = 50;
  /** RegularExpression Id. */
  int WHILE = 51;
  /** RegularExpression Id. */
  int STRING = 52;
  /** RegularExpression Id. */
  int NUM = 53;
  /** RegularExpression Id. */
  int DIGIT = 54;
  /** RegularExpression Id. */
  int ID = 55;
  /** RegularExpression Id. */
  int LETTER = 56;
  /** RegularExpression Id. */
  int OTHER = 57;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"/*\"",
    "<token of kind 7>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 10>",
    "\";\"",
    "\":\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"}\"",
    "\"{\"",
    "\"!\"",
    "\"?\"",
    "\"%\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\".\"",
    "\"and\"",
    "\"boolean\"",
    "\"constant\"",
    "\"do\"",
    "\"else\"",
    "\"false\"",
    "\"if\"",
    "\"integer\"",
    "\"main\"",
    "\"not\"",
    "\"or\"",
    "\"real\"",
    "\"return\"",
    "\"string\"",
    "\"then\"",
    "\"true\"",
    "\"var\"",
    "\"void\"",
    "\"while\"",
    "<STRING>",
    "<NUM>",
    "<DIGIT>",
    "<ID>",
    "<LETTER>",
    "<OTHER>",
  };

}
